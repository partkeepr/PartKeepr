Step-by-Step Guide for Ubuntu
=============================

IF YOU SIMPLY WANT TO USE PARTKEEPR AND NOT DEVELOPING, DOWNLOAD A RELEASE FROM http://www.partkeepr.org/download/ INSTEAD!

This guide explains how to setup your workstation so that you can develop using PartKeepr.

Tested with:
- Ubuntu 11.04
- Ubuntu 12.04

In this guide, I've used "/var/www" as web server root.


--------
CONTENTS
--------
- System config
- Partkeepr config
- Submitting code


-------------
SYSTEM CONFIG
-------------

# NOTE: These steps require root access.
# Prefix all commands with 'sudo' or run as the root user.

# Install apache, mysql, php, imagemagick and git
apt-get install apache2 mysql-server mysql-client libapache2-mod-php5 php5-mysql php5-curl php5-cli php-pear php5-imagick php5-xsl php-apc php5-dev imagemagick git

# On Ubuntu Server, you need to install ia32-libs (installed automatically on Ubuntu Desktop)
# Note: This is only required with 64-bit Ubuntu (not 32-bit)
apt-get install ia32-libs

# Install Java SDK
apt-get install default-jdk

# Update PEAR
pear update-channels
pear upgrade

# Install phpunit, phing, doctrine components and twig
#
# It can happen that a required channel is not available, maybe due to a server error or domain moving. Try again a bit
# later or use the force of google to find out what to do.
#
# During the installation, it could happen that the ImageMagick library gets pulled in via PECL. Just hit enter on each
# question and ignore if it fails; as long as you've got php5-imagick installed, you're set.

pear config-set auto_discover 1
pear install pear.phpunit.de/PHPUnit pear.phpunit.de/phpcpd pear.phing.info/phing pear.doctrine-project.org/DoctrineORM pear.doctrine-project.org/DoctrineSymfonyYaml pear.doctrine-project.org/DoctrineSymfonyConsole pear.twig-project.org/Twig
pear install --alldeps phpmd/PHP_PMD-alpha

# You'll also need jsl, the JavaScript lint
# Unfortunately, you need to compile this manually.

#jslint installation process

sudo apt-get install nodejs
sudo apt-get install npm
npm config set registry http://registry.npmjs.org/
Install node-jslint. either globally:

sudo npm install -g jslint
or locally, and include it in $PATH:

npm install jslint


------------------
# PARTKEEPR CONFIG
------------------

# NOTE: These steps can be performed as a regular user.
$ Steps requiring root permission

# Create a new database and user 'partkeepr'
mysql -uroot -p
CREATE DATABASE partkeepr CHARACTER SET utf8;
grant usage on *.* to partkeepr@localhost identified by 'partkeepr';
grant all privileges on partkeepr.* to partkeepr@localhost;
quit

# Test if you can connect
mysql -upartkeepr -ppartkeepr
quit

# Setting up the PartKeepr repository
# NOTE: You should secure the PartKeepr directory with appropriate permissions once setup is complete
cd /var/www
sudo mkdir PartKeepr
sudo chmod 777 PartKeepr

# Cloning will take a while, approx 50MB repository will be downloaded
git clone git://github.com/partkeepr/PartKeepr.git

cd /var/www/PartKeepr

# This will update the submodules. Another 400MB will be downloaded
git submodule sync
git submodule init
git submodule update

# Copy the default configuration file
cp config.php.template config.php

# You have now two choices: Proceed with or without sample data.

# ==== WITH SAMPLE DATA ====
# Yes, this is really a separate database! partdb is another software, and we're using the existing partdb data.
# You may remove the partdb database after migration has been taken place.
mysql -uroot -p
CREATE DATABASE partdb;
grant usage on *.* to partdb@localhost identified by 'partdb';
grant all privileges on partdb.* to partdb@localhost;
FLUSH PRIVILEGES;
quit

mysql -upartdb -ppartdb partdb < testing/setup.sql
cd testing
php SetupDatabase.php --yes --migrate

# ==== WITHOUT SAMPLE DATA ====
cd testing
php SetupDatabase.php --yes

# ==== Issuing migrations ====
# Ignore all messages about "was executed but did not result in any SQL statements"
cd /var/www/PartKeepr/
php partkeepr.php migrations:migrate

# Build the frontend
phing build

# Restart apache2 to make sure php5 is enabled (requires root permission)
sudo /etc/init.d/apache2 restart

# Open up your browser and navigate to http://localhost/PartKeepr/frontend
# The frontend should now appear


-----------------
# SUBMITTING CODE
-----------------

Please see the document SUBMITTING-CODE

