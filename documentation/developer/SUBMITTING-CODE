Guide for submitting code
=========================

--------
CONTENTS
--------
- git branches
- Code checking with jslint


------------
GIT BRANCHES
------------

All code changes you want included in the main project need to be made in a 'feature branch' and pushed to GitHub.
The following is a sample workflow for developers without write access to the project's main repo.

First, fork the project in GitHub:
	(see GitHub help - http://help.github.com/fork-a-repo)

Then clone it locally:
	(see GitHub help for forking - http://help.github.com/fork-a-repo/)
	git clone git@github.com:USERNAME/partkeepr.git
	cd partkeepr

Add a remote named 'upstream':
	git remote add upstream git://github.com/partkeepr/PartKeepr.git

Each new feature you add or bug fix you make should be in a separate branch, based on the 'master' branch:
	git branch my-feature upstream/master

Hack and commit.

Before submitting, ensure you are working off the latest upstream code:
	git checkout my-feature
	git rebase upstream/master
	(fix any conflicts or use 'git rebase -i master' for interactive rebasing)
NOTE: After pushing your new branch, you should not rebase again.  Use fetch and merge instead.

When complete, the branch should be pushed to GitHub and a pull request submitted.
	git checkout my-feature
	git push origin my-feature
	(see GitHub for help with pull requests - http://help.github.com/send-pull-requests)


-------------------------
CODE CHECKING WITH JSLINT
-------------------------

JavaScript code should be checked with jslint prior to committing in git.

Get and install 'JavaScript Lint' (jsl)
	- Linux
		- Download jsl source tarball
			http://www.javascriptlint.com/download.htm
		- Extract the tarball
			tar -xzf jsl-0.3.0-src.tar.gz
		- Switch to the src directory
			cd jsl-0.3.0/src
		- Build it
			make -f Makefile.ref BUILD_OPT=1
		- Copy the binary to a directory on your path, e.g.
			sudo cp Linux_All_OPT.OBJ/jsl /usr/local/bin/
			sudo chown root:root /usr/local/bin/jsl
			sudo chmod 755 /usr/local/bin/jsl
	- Mac
		- As per Linux
	- Windows
		- Download jsl
			http://www.javascriptlint.com/download.htm
		- Extract 'jsl.exe' from the zip file
		- Move 'jsl.exe' to a location on the system path

Enter 'jsl' to test it's working.

Add a git hook to check code on commit
	- Copy the supplied pre-commit hook file 'pre-commit.hook' to '.git/hooks'
	- Rename the file to 'pre-commit'

Now, all JavaScript files will be checked when you 'git commit'.

You can check the files at any time using:
	phing jslint

